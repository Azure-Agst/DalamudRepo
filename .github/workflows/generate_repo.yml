# ==================================== #
# generate_repo.yml                    #
# generate repo manifest using actions #
# ==================================== #

# Name:
name: Generate Repo Manifest

# Description:
#   This actions workflow was designed to run a single included tool using 
#   the actions runner's embedded python runtime. It gets a list of my repos
#   from a source file, gets all needed data from the API, then generates
#   a repo manifest.

#
# ===== [ Triggers ] ===========================================================
#

# Reasoning:
#   We want the repo regenerate whenever we either:
#   A.) Add a new plugin to be trasked by the repo
#   B.) We tell it manually to regenerate

on: 
  workflow_dispatch:
  push:
    branches:
    - master

# Note: We don't want this action to run after every time a bot pushes to
#       master, so we add this line.
concurrency: generate_repo

#
# ===== [ Jobs ] ==============================================================
#

jobs:

  # 1.) Generate Repo
  generate-repo:
    name: Generate repo.json
    runs-on: ubuntu-latest
    steps:

      # 1.1.) Set up workspace
      - name: Set up workspace
        uses: actions/checkout@v3
      
      # 1.2.) Install Python 3.10
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 1.3.) Install requests package
      - name: Install Requests
        run: pip3 install requests
      
      # 1.4.) Run our generation script
      - name: Run generation script
        run: python3 tools/generate_manifest.py

      # 1.5) Add generated file and commit
      - uses: EndBug/add-and-commit@v7
        with:
          author_name: GitHub Actions
          author_email: github-actions[bot]@users.noreply.github.com
          message: Regenerate Repo Manifest
